/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ec.com.asofar.views.tipodocumento;

import static com.sun.xml.internal.fastinfoset.alphabet.BuiltInRestrictedAlphabets.table;
import ec.com.asofar.dao.InTipoDocumentoJpaController;
import ec.com.asofar.dao.InTipoMovimientoJpaController;
import ec.com.asofar.dto.InTipoDocumento;
import ec.com.asofar.dto.SeEmpresa;
import ec.com.asofar.dto.SeSucursal;
import ec.com.asofar.dto.SeUsuarios;
import ec.com.asofar.util.EntityManagerUtil;
import ec.com.asofar.util.Tablas;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author admin1
 */
public class tipo_documentoForm extends javax.swing.JDialog {

    InTipoDocumento documento = new InTipoDocumento();
    List<InTipoDocumento> listaDocumento;
    InTipoDocumentoJpaController ptm = new InTipoDocumentoJpaController(EntityManagerUtil.ObtenerEntityManager());
    String valor = "";

    public tipo_documentoForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        MostrarMedidaActiva();
        System.out.println("holaaa");
        listaDocumento = ptm.findInTipoDocumentoEntities();
        for (int i = 0; i < listaDocumento.size(); i++) {
            System.out.println(listaDocumento.size());
        }
        btn_guardar.setVisible(false);
        
    }

    public tipo_documentoForm(java.awt.Frame parent, boolean modal, SeUsuarios us, SeEmpresa em, SeSucursal su) {
        super(parent, modal);
        initComponents();
        MostrarMedidaActiva();
    }

    private void MostrarMedidaActiva() {
        try {
            listaDocumento = ptm.findInTipoDocumentoEntities();
            for (InTipoDocumento y : listaDocumento) {
                System.out.println(y.getNombreDocumento());
            }
            Tablas.tabla_documento(tb_documento, listaDocumento);

        } catch (Exception e) {
            System.out.println("error documento: " + e.getMessage());
        }

    }

    public void DetectarCambio() {
        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_documento = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        toolbar = new javax.swing.JToolBar();
        jLabel2 = new javax.swing.JLabel();
        busqueda_tf = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        estado_cb = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        btn_guardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tb_documento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tb_documento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_documentoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_documento);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jLabel1.setBackground(new java.awt.Color(0, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TIPO DOCUMENTO");

        toolbar.setRollover(true);

        jLabel2.setText("Buscar:");
        toolbar.add(jLabel2);

        busqueda_tf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                busqueda_tfKeyTyped(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                busqueda_tfKeyReleased(evt);
            }
        });
        toolbar.add(busqueda_tf);

        jButton1.setText("Agregar");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        toolbar.add(jButton1);

        jButton2.setText("Editar");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        toolbar.add(jButton2);

        estado_cb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ACTIVO", "INACTIVO" }));
        estado_cb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                estado_cbItemStateChanged(evt);
            }
        });
        estado_cb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estado_cbActionPerformed(evt);
            }
        });
        toolbar.add(estado_cb);

        jButton3.setText("Volver");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        toolbar.add(jButton3);

        btn_guardar.setText("guardar");
        btn_guardar.setFocusable(false);
        btn_guardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_guardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });
        toolbar.add(btn_guardar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(toolbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(toolbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void busqueda_tfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_busqueda_tfKeyTyped
        char c = evt.getKeyChar();
        if (Character.isLowerCase(c)) {
            String text = ("" + c).toUpperCase();
            c = text.charAt(0);
            evt.setKeyChar(c);
        }
    }//GEN-LAST:event_busqueda_tfKeyTyped

    private void busqueda_tfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_busqueda_tfKeyReleased
//        // TODO add your handling code here:
//        valor = busqueda_tf.getText();
//        Tablas.filtro(valor, medida_tb);

    }//GEN-LAST:event_busqueda_tfKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
//        setVisible(false);
//        tipo_medida_agregar tma = new tipo_medida_agregar(new javax.swing.JFrame(), true);
//        tma.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
//        // TODO add your handling code here:
//        String id = (String) medida_tb.getValueAt(medida_tb.getSelectedRow(), 0);
//        setVisible(false);
//        medidas = devuelveObjeto(Long.parseLong(id));
//        if (medidas != null) {
//            tipo_medida_editar tme = new tipo_medida_editar(new javax.swing.JFrame(), true, medidas);
////            tme.setVisible(true);
//        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void estado_cbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_estado_cbItemStateChanged
        // TODO add your handling code here:
        //        if (estado_cb.getSelectedIndex() == 0) {
        ////            listamedida.clear();
        //            busqueda_tf.setText("");
        //            MostrarMedidaActiva();
        ////            listamedida = pjc.findPrTipoMedidasEntities();
        ////            Tablas.TablaTipoMedidaActivo(listamedida, medida_tb);
        //        } else {
        //            busqueda_tf.setText("");
        //            MostrarMedidaInactiva();
        //        }
    }//GEN-LAST:event_estado_cbItemStateChanged

    private void estado_cbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estado_cbActionPerformed
//        if (estado_cb.getSelectedIndex() == 0) {
//            //            listamedida.clear();
//            busqueda_tf.setText("");
//            MostrarMedidaActiva();
//            //            listamedida = pjc.findPrTipoMedidasEntities();
//            //            Tablas.TablaTipoMedidaActivo(listamedida, medida_tb);
//        } else {
//            busqueda_tf.setText("");
//            MostrarMedidaInactiva();
//        }
    }//GEN-LAST:event_estado_cbActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
//        // TODO add your handling code here:
//        setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tb_documentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_documentoMouseClicked
        int pos=tb_documento.getSelectedRow();
        
     //  int valor=devuelveObjeto();
        for (int i = 0; i < tb_documento.getRowCount(); i++) {
            String a = transformarboolean((boolean)tb_documento.getValueAt(i, 2));
            String b = listaDocumento.get(i).getEstado().toString();       
            if(!a.equals(b)){
             btn_guardar.setVisible(true);
             break;
            }
        }
        
    }//GEN-LAST:event_tb_documentoMouseClicked
//    public int devuelveObjeto(String datos, ArrayList<Precios> listarobj) {
//        int objeto1 = 0;
//        for (int i = 0; i < listarobj.size(); i++) {
//            if (datos.equals(listarobj.get(i).getId_precio().toString())) {
//                objeto1 = listarobj.get(i);
//                break;
//            }
//        }
//        return objeto1;
//    }
    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed
       ArrayList<String> queryL1 = new ArrayList<String>();String cad1="";
        boolean estado = false;
        for (int i = 0; i < tb_documento.getRowCount(); i++) {
            estado = (boolean) tb_documento.getValueAt(i, 2);
            String est = transformarboolean(estado);
            cad1 = "update in_tipo_documento set estado = '"+estado+"' where id_tipo_documento ="+tb_documento.getValueAt(i, 0)+";";
 
            queryL1.add(cad1);
            System.out.println(cad1);
        }
        
    }//GEN-LAST:event_btn_guardarActionPerformed
    public String transformarboolean(boolean valor) {
        if (valor == true) {
            return "A";
        } else {
            return "I";
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tipo_documentoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tipo_documentoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tipo_documentoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tipo_documentoForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                tipo_documentoForm dialog = new tipo_documentoForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_guardar;
    private javax.swing.JTextField busqueda_tf;
    private javax.swing.JComboBox<String> estado_cb;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tb_documento;
    private javax.swing.JToolBar toolbar;
    // End of variables declaration//GEN-END:variables
}
